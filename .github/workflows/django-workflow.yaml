name: Validation and Deployment

on:
    workflow_call:
    workflow_dispatch:
    push:
       branches: [dev]
    pull_request:
        branches: [dev]

jobs:
  pytest:
    runs-on: ubuntu-latest
    env:
      MY_POSTGRES_USER: ${{ secrets.DEV_POSTGRES_USER }}
      MY_POSTGRES_PASSWORD: ${{ secrets.DEV_POSTGRES_PASSWORD }}
      MY_POSTGRES_DB: ${{ secrets.DEV_POSTGRES_DATABASE }}
    services:
      postgres_main:
        image: postgres:14.5
        env:
          POSTGRES_USER: ${{ env.MY_POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.MY_POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.MY_POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
           python-version: 3.10.6
      - name: Install requirements
        run: |
            pip install -r requirements.txt
      - name: Run tests
        env:
          DJANGO_DEV: true
        run: |
            pytest . 
  flake8:
    needs: pytest
    runs-on: ubuntu-latest
    steps: 
      - name: Run Flake8
        run: flake8 . --exclude=*migrations/* --max-line-length=100
  Deploy:
    needs: pytest
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: rsync deployments
      uses: burnett01/rsync-deployments@5.2.1
      with:
        switches: -avzr --delete
        remote_path: ${{ secrets.DEPLOY_PATH }}
        remote_host: ${{ secrets.HOST }}
        remote_port: ${{ secrets.SSH_PORT }}
        remote_user: ${{ secrets.SSH_USER }}
        remote_key: ${{ secrets.KEY }}
  Start-service:
    needs: Deploy
    runs-on: ubuntu-latest
    env:
      SECRET_KEY: ${{ secrets.PROD_DJANGO_SECRET_KEY }}
      DB_DATABASE: ${{ secrets.PROD_DB_DATABASE }}
      DB_USERNAME: ${{ secrets.PROD_DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.PROD_DB_PASSWORD }}
      DB_HOST: ${{ secrets.PROD_DB_HOST }}
      DB_PORT: ${{ secrets.PROD_DB_PORT }}
    steps:
      - name: ðŸ›’ Checkout
        uses: actions/checkout@v2
      - name: executing remote ssh commands
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.KEY }}
          script: |
            /var/www/html/bodzify-api/venv/bin/pip install -r /var/www/html/bodzify-api/requirements.txt
            sudo lsof -t -i tcp:443 -s tcp:listen | sudo xargs kill
            gunicorn --certfile=/etc/ssl/certs/www.bodzify.com.chained.crt --keyfile=/etc/ssl/certs/www.bodzify.com.key --bind 0.0.0.0:443 -k uvicorn.workers.UvicornWorker bodzify_api.asgi:application
