name: Validation and Deployment

on:
    workflow_call:
    workflow_dispatch:
    push:
       branches: [dev]
    pull_request:
        branches: [dev]

jobs:
  # pytest:
  #   runs-on: ubuntu-latest
  #   env:
  #     MY_POSTGRES_USER: ${{ secrets.DEV_POSTGRES_USER }}
  #     MY_POSTGRES_PASSWORD: ${{ secrets.DEV_POSTGRES_PASSWORD }}
  #     MY_POSTGRES_DB: ${{ secrets.DEV_POSTGRES_DATABASE }}
  #   services:
  #     postgres_main:
  #       image: postgres:14.5
  #       env:
  #         POSTGRES_USER: ${{ env.MY_POSTGRES_USER }}
  #         POSTGRES_PASSWORD: ${{ env.MY_POSTGRES_PASSWORD }}
  #         POSTGRES_DB: ${{ env.MY_POSTGRES_DB }}
  #       ports:
  #         - 5432:5432
  #       options: >-
  #         --health-cmd pg_isready 
  #         --health-interval 10s 
  #         --health-timeout 5s 
  #         --health-retries 5
  #   steps:
  #     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #     - name: Checkout code
  #       uses: actions/checkout@v2
  #     - name: Setup Python ${{ matrix.python-version }}
  #       uses: actions/setup-python@v2
  #       with:
  #          python-version: 3.10.6
  #     - name: Install requirements
  #       run: |
  #           pip install -r requirements.txt
  #     - name: Run tests
  #       env:
  #         DJANGO_DEV: true
  #       run: |
  #           pytest .

  # flake8:
  #   needs: pytest
  #   runs-on: ubuntu-latest
  #   steps: 
  #     - name: Run Flake8
  #       run: flake8 . --exclude=*migrations/* --max-line-length=100

  Docker:
    name: Publish - Docker Hub
    runs-on: ubuntu-18.04
    # needs: [pytest]
    env:
      REPO: mignot/bodzify-api
    steps:
      - uses: actions/checkout@v2
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USER }} 
             -p ${{ secrets.DOCKER_PASSWORD }}
      - name: Build Docker image
        env: 
          SECRET_KEY: aaaaa
        run: docker build --build-arg secretKey=aaaa -t $REPO:latest -t $REPO:${GITHUB_SHA::8} .
      - name: Publish Docker image
        run: docker push $REPO

  Redeploy:
    name: Redeploy webhook call
    runs-on: ubuntu-18.04
    needs: [Docker]
    steps:
      - name: Deploy docker container webhook
        uses: joelwmale/webhook-action@master
        env:
          WEBHOOK_URL: ${{ secrets.DEPLOY_WEBHOOK_URL  }}