name: Validation and Deployment

on:
    workflow_call:
    workflow_dispatch:
    push:
       branches: [dev]
    pull_request:
        branches: [dev]

jobs:
  pytest:
    runs-on: ubuntu-latest
    env:
      MY_POSTGRES_USER: django
      MY_POSTGRES_PASSWORD: T6q)32hr6fr
      MY_POSTGRES_DB: bodzify_api
    services:
      postgres_main:
        image: postgres:14.5
        env:
          POSTGRES_USER: ${{ env.MY_POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.MY_POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.MY_POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
           python-version: 3.10.6
      - name: Install requirements
        run: |
            pip install -r requirements.txt
      - name: Run tests
        env:
          DJANGO_DEV: true
        run: |
            pytest . 
  flake8:
    needs: pytest
    runs-on: ubuntu-latest
    steps: 
      - name: Run Flake8
        run: flake8 . --exclude=*migrations/* --max-line-length=100
  FTP-transfer-to-prod:
    needs: pytest
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ›’ Checkout
        uses: actions/checkout@v2
      - name: ðŸ“¦ Get LFTP
        run: sudo apt install lftp
      - name: ðŸ“„ Upload Folder
        run: > 
          lftp -c "set ssl:verify-certificate false; 
          set sftp:auto-confirm yes; open "sftp://bodzify.com" -p 22 -u root,'${{ secrets.FTP_PASSWORD }}'; 
          mirror -R -n -v . /var/www/html/bodzify-api/ 
          --exclude .git/ --exclude /__pycache__/ --exclude .pytest_cache/ --exclude log/myfreemp3Scrapper/ --delete;"
  Install-requirements:
    needs: FTP-transfer-to-prod
    runs-on: ubuntu-latest
    steps:
      - name: Install sshpass
        run: sudo apt-get install sshpass
      - name: Install requirements
        run: >
          sshpass -p 'u:${{ secrets.FTP_PASSWORD }}' ssh root@bodzify.com 
          source /var/www/html/bodzify-api/bin/activate; 
          pip install -r /var/www/html/bodzify-api/requirements.txt;