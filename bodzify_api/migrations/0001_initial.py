# Generated by Django 4.1 on 2022-11-22 15:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import shortuuid.main


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('uuid', models.CharField(default=shortuuid.main.ShortUUID.uuid, editable=False, max_length=200, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('addedOn', models.DateTimeField(auto_now_add=True)),
                ('parent', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='bodzify_api.tag')),
            ],
        ),
        migrations.CreateModel(
            name='TagType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(default=None, max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TagPlaylist',
            fields=[
                ('uuid', models.CharField(default=shortuuid.main.ShortUUID.uuid, editable=False, max_length=200, primary_key=True, serialize=False)),
                ('name', models.CharField(default=shortuuid.main.ShortUUID.uuid, editable=False, max_length=200, unique=True)),
                ('addedOn', models.DateTimeField(auto_now_add=True)),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bodzify_api.tag')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='tag',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bodzify_api.tagtype'),
        ),
        migrations.AddField(
            model_name='tag',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('uuid', models.CharField(default=shortuuid.main.ShortUUID.uuid, editable=False, max_length=200, primary_key=True, serialize=False)),
                ('name', models.CharField(default=shortuuid.main.ShortUUID.uuid, editable=False, max_length=200, unique=True)),
                ('addedOn', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryTrack',
            fields=[
                ('path', models.CharField(max_length=200)),
                ('uuid', models.CharField(default=shortuuid.main.ShortUUID.uuid, editable=False, max_length=200, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('artist', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('album', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('duration', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('rating', models.IntegerField(blank=True, default=None, null=True)),
                ('language', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('addedOn', models.DateTimeField(auto_now_add=True)),
                ('genre', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bodzify_api.tag')),
                ('playlists', models.ManyToManyField(to='bodzify_api.tagplaylist')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='tag',
            unique_together={('user', 'name', 'type')},
        ),
    ]
